.btn {
	&,
	&:link,
	&:visited {
		text-transform: uppercase;
		text-decoration: none;
		padding: 1.5rem 4rem;
		display: inline-block;
		/* Inline-block element treated as if it were text, therefore set text-align of .text-box to center button */
		border-radius: 10rem;
		/* transition property has to go on the initial state */
		transition: all .2s;
		position: relative;
		font-size: $default-font-size;		

		// Change for the <button> element in form
		border: none;
	}

	&:hover {
		transform: translateY(-3px);
		/* box-shadow: x-value y-value blur color */
		box-shadow: 0 1rem 2rem rgba($color-black, .2);

		&::after {
			transform: scaleX(1.4) scaleY(1.6);
			opacity: 0;
		}
	}

	&:active,
	&:focus {
		outline: none;
		transform: translateY(-.1rem);
		box-shadow: 0 .5rem 1rem rgba($color-black, .2);
	}

	&--white {
		background-color: $color-white;
		color: $color-grey-dark;

		&::after {
			background-color: $color-white;
		}
	}

	&--green {
		background-color: $color-primary;
		color: $color-white;

		&::after {
			background-color: $color-primary;
		}
	}

	/* The after pseudo-element is treated like a child of the button. Hence, 100% of the button's height and width */
	&::after {
		/* content and display properties must be specified, even if content left empty as below */
		content: "";
		display: inline-block;
		height: 100%;
		width: 100%;
		border-radius: 10rem;
		/* This will set after button behind the original button, but only if its position is relative! */
		position: absolute;
		top: 0;
		left: 0;
		z-index: -1;
		transition: all .4s;
	}

	&--animated {
		/* 75s is animation-delay. Backwards fill-mode applies the @keyframe animation's
		0% settings first and stops the button from appearing before animating */
		animation: moveInBottom .5s ease-out .75s;
		animation-fill-mode: backwards;
	}
}

.btn-text {
	&:link,
	&:visited {
		font-size: $default-font-size;
		color: $color-primary;
		display: inline-block;
		text-decoration: none;
		border-bottom: 1px solid $color-primary;
		padding: 3px;
		transition: all .2s;
	}

	&:hover {
		background-color: $color-primary;
		color: $color-white;
		box-shadow: 0 1rem 2rem rgba($color-black, .15);
		transform: translateY(-2px);
	}

	&::active {
		box-shadow: 0 1rem 2rem rgba($color-black, .15);
		transform: translateY(0);
	}
}